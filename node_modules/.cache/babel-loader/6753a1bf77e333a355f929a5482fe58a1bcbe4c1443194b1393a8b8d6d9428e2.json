{"ast":null,"code":"var _jsxFileName = \"/Users/user1/Desktop/React JS/react---github---project/src/Components/UsersList.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { setSelectedUser } from '../actions/action';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserList = () => {\n  _s();\n  const users = useSelector(state => state.users);\n  const dispatch = useDispatch();\n  const handleUserClick = user => {\n    dispatch(setSelectedUser(user)); // Обновляем состояние Redux с выбранным пользователем\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    children: users.map(user => /*#__PURE__*/_jsxDEV(\"li\", {\n      onClick: () => handleUserClick(user),\n      children: user.login\n    }, user.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n};\n_s(UserList, \"DTDZbuwvovtXlTMrTjttcn5TBZ0=\", false, function () {\n  return [useSelector, useDispatch];\n});\n_c = UserList;\nexport default UserList;\nvar _c;\n$RefreshReg$(_c, \"UserList\");","map":{"version":3,"names":["React","setSelectedUser","useSelector","useDispatch","jsxDEV","_jsxDEV","UserList","_s","users","state","dispatch","handleUserClick","user","children","map","onClick","login","id","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/user1/Desktop/React JS/react---github---project/src/Components/UsersList.js"],"sourcesContent":["import React from 'react';\n\nimport { setSelectedUser } from '../actions/action';\nimport { useSelector, useDispatch } from 'react-redux';\n\n\nconst UserList = () => {\n\n  const users = useSelector((state) => state.users);\n  const dispatch = useDispatch();\n\n  const handleUserClick = (user) => {\n    dispatch(setSelectedUser(user)); // Обновляем состояние Redux с выбранным пользователем\n  };\n\n  return (\n    <ul>\n      {users.map((user) => (\n        <li key={user.id} onClick={() => handleUserClick(user)}>\n          {user.login}\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nexport default UserList;\n\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,SAASC,eAAe,QAAQ,mBAAmB;AACnD,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGvD,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAErB,MAAMC,KAAK,GAAGN,WAAW,CAAEO,KAAK,IAAKA,KAAK,CAACD,KAAK,CAAC;EACjD,MAAME,QAAQ,GAAGP,WAAW,CAAC,CAAC;EAE9B,MAAMQ,eAAe,GAAIC,IAAI,IAAK;IAChCF,QAAQ,CAACT,eAAe,CAACW,IAAI,CAAC,CAAC,CAAC,CAAC;EACnC,CAAC;;EAED,oBACEP,OAAA;IAAAQ,QAAA,EACGL,KAAK,CAACM,GAAG,CAAEF,IAAI,iBACdP,OAAA;MAAkBU,OAAO,EAAEA,CAAA,KAAMJ,eAAe,CAACC,IAAI,CAAE;MAAAC,QAAA,EACpDD,IAAI,CAACI;IAAK,GADJJ,IAAI,CAACK,EAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEZ,CACL;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAET,CAAC;AAACd,EAAA,CAlBID,QAAQ;EAAA,QAEEJ,WAAW,EACRC,WAAW;AAAA;AAAAmB,EAAA,GAHxBhB,QAAQ;AAoBd,eAAeA,QAAQ;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}